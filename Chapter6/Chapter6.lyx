#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard

\series bold
Chapter 6.
 Localization
\end_layout

\begin_layout Standard

\series bold
6.1.
 Dead Reckoning
\end_layout

\begin_layout Standard
+ Dead reckoning is the estimation of a robot’s pose based on its estimated
 speed, direction and time of travel with respect to a previous estimate.
\end_layout

\begin_layout Standard
+ An odometer is a sensor that measures distance traveled and sometimes
 also change in heading direction.
 For wheeled vehicles this can be determined by measuring the angular rotation
 of the wheels.
 The direction of travel can be measured using an electronic compass, or
 the change in heading can be measured using a gyroscope or differential
 odometry.
\end_layout

\begin_layout Standard
+ But they are imperfect due to systematic errors.
\end_layout

\begin_layout Standard

\series bold
6.1.1.
 Modeling the Vehicle
\end_layout

\begin_layout Standard
+ The first step in estimating the robot’s pose is to write a function,
 
\begin_inset Formula $\boldsymbol{f}(.)$
\end_inset

, that describes how the vehicle’s configuration changes from one time step
 to the next.
\end_layout

\begin_layout Standard
+ A discrete-time model for the evolution of confi guration based on odometry
 where 
\begin_inset Formula $\delta\left\langle k\right\rangle =\left(\delta_{d},\delta_{\theta}\right)$
\end_inset

 is the distance traveled and change in heading over the preceding interval,
 and 
\begin_inset Formula $k$
\end_inset

 is the time step.
 The initial pose is represented in 
\begin_inset Formula $\boldsymbol{SE}(2)$
\end_inset

 as
\end_layout

\begin_layout Standard
\begin_inset Formula $\xi\left\langle k\right\rangle \sim\left(\begin{array}{ccc}
\cos\theta\left\langle k\right\rangle  & -\sin\theta\left\langle k\right\rangle  & x\left\langle k\right\rangle \\
\sin\theta\left\langle k\right\rangle  & \cos\theta\left\langle k\right\rangle  & y\left\langle k\right\rangle \\
0 & 0 & 1
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
+ The motion over the small time that move forward in the vehicle x-direction
 by 
\begin_inset Formula $\delta_{d}$
\end_inset

, and then rotate by 
\begin_inset Formula $\delta_{\theta}$
\end_inset

 giving the new configuration:
\end_layout

\begin_layout Standard
\begin_inset Formula $\xi\left\langle k+1\right\rangle \sim\left(\begin{array}{ccc}
\cos\theta\left\langle k\right\rangle  & -\sin\theta\left\langle k\right\rangle  & x\left\langle k\right\rangle \\
\sin\theta\left\langle k\right\rangle  & \cos\theta\left\langle k\right\rangle  & y\left\langle k\right\rangle \\
0 & 0 & 1
\end{array}\right)\left(\begin{array}{ccc}
1 & 0 & \delta_{d}\\
0 & 1 & 0\\
0 & 0 & 1
\end{array}\right)\left(\begin{array}{ccc}
\cos\delta_{\theta} & -\sin\delta_{\theta} & 0\\
\sin\delta_{\theta} & \cos\delta_{\theta} & 0\\
0 & 0 & 1
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\sim\left(\begin{array}{ccc}
\cos\left(\theta\left\langle k\right\rangle +\delta_{\theta}\right) & -\sin\left(\theta\left\langle k\right\rangle +\delta_{\theta}\right) & x\left\langle k\right\rangle +\delta_{d}\cos\theta\left\langle k\right\rangle \\
\sin\left(\theta\left\langle k\right\rangle +\delta_{\theta}\right) & \cos\left(\theta\left\langle k\right\rangle +\delta_{\theta}\right) & y\left\langle k\right\rangle +\delta_{d}\cos\theta\left\langle k\right\rangle \\
0 & 0 & 1
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
which can represent as a3-vector 
\begin_inset Formula $\boldsymbol{x}=\left(x,y,\theta\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{x}\left\langle k+1\right\rangle =\left(\begin{array}{c}
x\left\langle k\right\rangle +\delta_{d}\cos\theta\left\langle k\right\rangle \\
y\left\langle k\right\rangle +\delta_{d}\cos\theta\left\langle k\right\rangle \\
\theta\left\langle k\right\rangle +\delta_{\theta}
\end{array}\right)$
\end_inset

 which gives the new configuration in terms of the previous configuration
 and the odometry.
\end_layout

\begin_layout Standard
+ In practive, odemetry is not perfect.
 The measured output of the real odometer is the perfect but unknown, odometry
 
\begin_inset Formula $(\delta_{d},\delta_{\theta})$
\end_inset

 plus the output of the random number generator 
\begin_inset Formula $(v_{d},v_{\theta})$
\end_inset

.
\end_layout

\begin_layout Standard
+ The robot’s configuration at the next time step, including the odometry
 error
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{x}\left\langle k+1\right\rangle =\boldsymbol{f}\left(\boldsymbol{x}\left\langle k\right\rangle ,\delta\left\langle k\right\rangle ,\boldsymbol{\upsilon}\left\langle k\right\rangle \right)=\left(\begin{array}{c}
x\left\langle k\right\rangle +\left(\delta_{d}+v_{d}\right)\cos\theta\left\langle k\right\rangle \\
y\left\langle k\right\rangle +\left(\delta_{d}+v_{d}\right)\cos\theta\left\langle k\right\rangle \\
\theta\left\langle k\right\rangle +\delta_{\theta}+v_{\theta}
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $k$
\end_inset

 is the time step, 
\begin_inset Formula $\delta\left\langle k\right\rangle =\left(\delta_{d},\delta_{\theta}\right)^{T}\in\mathbb{R}^{2\times1}$
\end_inset

 is the odometry measurement and 
\begin_inset Formula $\boldsymbol{\upsilon}\left\langle k\right\rangle =\left(v_{d},v_{\theta}\right)^{T}\in\mathbb{R}^{2\times1}$
\end_inset

 is the random measurement noise.
\end_layout

\begin_layout Standard
+ The odometry noise as 
\begin_inset Formula $\boldsymbol{\upsilon}\left\langle k\right\rangle =\left(v_{d},v_{\theta}\right)^{T}\sim N\left(0,\boldsymbol{V}\right),$
\end_inset

a zero-mean multivariate Gaussian process with variance
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{V}=\left(\begin{array}{cc}
\sigma_{d}^{2} & 0\\
0 & \sigma_{\theta}^{2}
\end{array}\right)$
\end_inset

.
 This constant matrix, the covariance matrix, is diagonal which means that
 the errors in distance and heading are 
\emph on
independent
\emph default
.
\end_layout

\begin_layout Standard

\series bold
6.1.2.
 Estimating Pose
\end_layout

\begin_layout Standard
+ The problem: how to estimate our new pose given the previous pose and
 noisy odometry: Kalman filter.
 This filter provides the optimal estimate of the system state, vehicle
 configuration in this case, assuming that the noise is zero-mean and Gaussian.
 The Kalman filter is formulated for linear systems but our model of the
 vehicle’s motion is nonlinear – the tool of choice is the extended Kalman
 filter ( EKF).
\end_layout

\begin_layout Standard
+ The vehicle's configuration:
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{x}=\left(x_{v},y_{v},\theta_{v}\right)^{T}$
\end_inset

 and the prediction equations:
\end_layout

\begin_layout Standard
\begin_inset Formula $\begin{array}{c}
\hat{\boldsymbol{x}}^{+}\left\langle k+1\right\rangle =\boldsymbol{f}\left(\hat{\boldsymbol{x}}\left\langle k\right\rangle ,\hat{\boldsymbol{u}}\left\langle k\right\rangle \right)\\
\hat{\boldsymbol{P}}^{+}\left\langle k+1\right\rangle =\boldsymbol{F}_{x}\hat{\boldsymbol{P}}\left\langle k\right\rangle \boldsymbol{F}_{x}^{T}+\boldsymbol{F}_{v}\hat{\boldsymbol{V}}\boldsymbol{F}_{v}^{T}
\end{array}$
\end_inset

 describe how the state and covariance evolve with time.
 The term 
\begin_inset Formula $\hat{\boldsymbol{x}}^{+}\left\langle k+1\right\rangle $
\end_inset

 indicates an estimate of 
\begin_inset Formula $x$
\end_inset

 at time 
\begin_inset Formula $k+1$
\end_inset

 based on information up to, and including, time 
\begin_inset Formula $k$
\end_inset

.
 
\begin_inset Formula $\hat{\boldsymbol{u}}\left\langle k\right\rangle $
\end_inset

 is the input to the process, which in this case is the measured odometry,
 so 
\begin_inset Formula $\hat{\boldsymbol{u}}\left\langle k\right\rangle =\delta\left\langle k\right\rangle $
\end_inset

.
 
\begin_inset Formula $\hat{\boldsymbol{P}}\in\mathbb{R}^{3\times3}$
\end_inset

 is a covariance matrix representing uncertainty in the estimated vehicle
 configuration.
\begin_inset Formula $\hat{\boldsymbol{V}}$
\end_inset

 is our estimate of the covariance of the odometry noise which in reality
 we do not know.
\end_layout

\begin_layout Standard
+ 
\begin_inset Formula $F_{x}$
\end_inset

 and 
\begin_inset Formula $F_{v}$
\end_inset

 are Jacobian matrices – the vector version of a derivative.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{F}_{x}=\frac{\partial\boldsymbol{f}}{\text{\ensuremath{\partial\boldsymbol{x}}}}(\boldsymbol{\upsilon}=0)=\left(\begin{array}{ccc}
1 & 0 & -\delta_{d}\sin\theta_{v}\\
0 & 1 & \delta_{d}\cos\theta_{v}\\
0 & 0 & 1
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{F}_{v}=\frac{\partial\boldsymbol{f}}{\text{\ensuremath{\partial\boldsymbol{\upsilon}}}}(\boldsymbol{\upsilon}=0)=\left(\begin{array}{cc}
\cos\theta_{v} & 0\\
\sin\theta_{v} & 0\\
0 & 1
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
which are functions of the current state and odometry.
\end_layout

\begin_layout Standard

\series bold
6.2.
 Localizing with a Map
\end_layout

\begin_layout Standard
+ The robot is equipped with a sensor that provides observations of the
 landmarks 
\emph on
with respect to the robot
\emph default
 as described by
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{z}=\boldsymbol{h}\left(\boldsymbol{x},\boldsymbol{p}_{i}\right)$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\boldsymbol{x}=(x_{v},y_{v},\theta_{v})^{T}$
\end_inset

 is the vehicle state, and 
\begin_inset Formula $\boldsymbol{p}_{i}=(x_{i},y_{i})^{T}$
\end_inset

 is the 
\emph on
known
\emph default
 location of the 
\begin_inset Formula $i^{th}$
\end_inset

 landmark in the world frame.
\end_layout

\begin_layout Standard
+ The sensor is mounted onboard the robot so the observation of the 
\begin_inset Formula $i^{th}$
\end_inset

 landmark is
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{z}=\boldsymbol{h}\left(\boldsymbol{x},\boldsymbol{p}_{i}\right)=\left(\begin{array}{c}
\sqrt{\left(y_{i}-y_{v}\right)^{2}+\left(x_{i}-x_{v}\right)^{2}}\\
\tan^{-1}\left(y_{i}-y_{v}\right)/\left(x_{i}-x_{v}\right)-\theta_{v}
\end{array}\right)+\left(\begin{array}{c}
w_{r}\\
w_{\beta}
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\boldsymbol{z}=(r,\beta)$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 is the range, 
\begin_inset Formula $\beta$
\end_inset

 the bearing angle, and 
\begin_inset Formula $\boldsymbol{\omega}=(w_{r},w_{\beta})^{T}$
\end_inset

 is a zeromean Gaussian random variable that models errors in the sensor
\end_layout

\begin_layout Standard
\begin_inset Formula $\left(\begin{array}{c}
w_{r}\\
w_{\beta}
\end{array}\right)\sim N(0,\boldsymbol{W}),\boldsymbol{W}=\left(\begin{array}{cc}
\sigma_{r}^{2} & 0\\
0 & \sigma_{\beta}^{2}
\end{array}\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
The constant diagonal covariance matrix indicates that range and bearing
 errors are independent.
\end_layout

\begin_layout Standard
+ Any difference between the observation z# and the estimated observation
 indicates an error in the robot’s pose estimate 
\begin_inset Formula $\hat{\boldsymbol{x}}$
\end_inset

 – it isn’t where it 
\emph on
thought
\emph default
 it was.
 However this 
\emph on
difference
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{v}=\boldsymbol{z}^{\#}\left\langle k+1\right\rangle -\boldsymbol{h}\left(\hat{\boldsymbol{x}}^{+}\left\langle k+1\right\rangle ,\boldsymbol{p}_{i}\right)$
\end_inset

 has real value and is key to the operation of the Kalman filter.
\end_layout

\begin_layout Standard
+ The predicted state is update by
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\boldsymbol{x}}\left\langle k+1\right\rangle =\hat{\boldsymbol{x}}^{+}\left\langle k+1\right\rangle +\boldsymbol{Kv}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\boldsymbol{P}}\left\langle k+1\right\rangle =\hat{\boldsymbol{P}}^{+}\left\langle k+1\right\rangle -\boldsymbol{K}\boldsymbol{H}_{x}\hat{\boldsymbol{P}}^{+}\left\langle k+1\right\rangle $
\end_inset


\end_layout

\begin_layout Standard
which are the Kalman filter update equations.
 These take the 
\emph on
predicted
\emph default
 values for the next time step denoted with the 
\begin_inset Formula $+$
\end_inset

 and compute the optimal estimate by applying landmark measurements from
 time step 
\begin_inset Formula $k+1$
\end_inset

.
\end_layout

\begin_layout Standard
+ The innovation is added to the estimated state after multiplying by the
 Kalman gain matrix K which is defined as:
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{K}=\hat{\boldsymbol{P}}^{+}\left\langle k+1\right\rangle \boldsymbol{H}_{x}^{T}\boldsymbol{S}^{-1}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{S}=\boldsymbol{H}_{x}\hat{\boldsymbol{P}}^{+}\left\langle k+1\right\rangle \boldsymbol{H}_{x}^{T}+\boldsymbol{H}_{w}\hat{\boldsymbol{W}}\boldsymbol{H}_{w}^{T}$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\hat{\text{\ensuremath{\boldsymbol{W}}}}$
\end_inset

 is the estimated covariance of the sensor noise and 
\begin_inset Formula $\boldsymbol{H}_{x}$
\end_inset

 and 
\begin_inset Formula $\boldsymbol{H}_{w}$
\end_inset

 are Jacobians
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{H}_{w}=\frac{\partial\boldsymbol{h}}{\partial\boldsymbol{\omega}}(\boldsymbol{\omega}=0)=\left(\begin{array}{cc}
1 & 0\\
0 & 1
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
+ The EKF comprises two phases: prediction and update, and these are summarized
 in Fig.
 6.1
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename example_1.png
	lyxscale 80

\end_inset

 Fig 6.1
\end_layout

\begin_layout Standard
+ EKF framework allows data from many and varied sensors to update the state
 which is why the estimation problem is also referred to as sensor fusion.
\end_layout

\begin_layout Standard

\series bold
6.3.
 Creating a Map
\end_layout

\begin_layout Standard
+ The state vector comprises the estimated coordinates of the M landmarks
 that have been observed so far
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\boldsymbol{x}}=\left(x_{1},y_{1},x_{2},y_{2},...,x_{M},y_{M}\right)^{T}\in\mathbb{R}^{2M\times1}$
\end_inset


\end_layout

\begin_layout Standard
+ The corresponding estimated covariance 
\begin_inset Formula $\hat{\boldsymbol{P}}$
\end_inset

 will be a 
\begin_inset Formula $2M\times2M$
\end_inset

 matrix.
 The state vector has a variable length since we do not know in advance
 how many landmarks exist in the environment.
 Initially 
\begin_inset Formula $M=0$
\end_inset

 and is incremented every time a previously unseen landmark is observed.
\end_layout

\begin_layout Standard
+ The prediction equation is straightforward in this case since the landmarks
 are assumed to be stationary
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\boldsymbol{x}}^{+}\left\langle k+1\right\rangle =\hat{\boldsymbol{x}}\left\langle k\right\rangle $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\boldsymbol{P}}^{+}\left\langle k+1\right\rangle =\hat{\boldsymbol{P}}\left\langle k\right\rangle $
\end_inset


\end_layout

\begin_layout Standard
+ The function 
\begin_inset Formula $\boldsymbol{g}(.)$
\end_inset

 which is the inverse of 
\begin_inset Formula $\boldsymbol{h}(.)$
\end_inset

 and gives the coordinates of the observed landmark based on the known vehicle
 pose and the sensor observation
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{g}\left(\boldsymbol{x},\boldsymbol{z}\right)=\left(\begin{array}{c}
x_{v}+r\cos\left(\theta_{v}+\beta\right)\\
y_{v}+r\sin\left(\theta_{v}+\beta\right)
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $\hat{\boldsymbol{x}}$
\end_inset

 has a variable length we need to extend the state vector and the covariance
 matrix whenever we encounter a landmark we have not previously seen.
 The state vector is extended by the function 
\begin_inset Formula $\boldsymbol{y}(.)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{x}\left\langle k\right\rangle '=\boldsymbol{y}\left(\boldsymbol{x}\left\langle k\right\rangle ,\boldsymbol{z}\left\langle k\right\rangle ,\boldsymbol{x}_{v}\left\langle k\right\rangle \right)=\left(\begin{array}{c}
\boldsymbol{x}\left\langle k\right\rangle \\
\boldsymbol{g}\left(\boldsymbol{x}_{v}\left\langle k\right\rangle ,\boldsymbol{z}\left\langle k\right\rangle \right)
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
which appends the sensor-based estimate of the new landmark’s coordinates
 to those already in the map.
 The order of feature coordinates within 
\begin_inset Formula $\hat{\boldsymbol{x}}$
\end_inset

 therefore depends on the order in which they are observed.
\end_layout

\begin_layout Standard
+ The covariance matrix also needs to be extended when a new landmark is
 observed and this is achieved by
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\boldsymbol{P}}\left\langle k\right\rangle '=\boldsymbol{Y}_{z}\left(\begin{array}{cc}
\hat{\boldsymbol{P}}\left\langle k\right\rangle  & 0\\
0 & \hat{\boldsymbol{W}}
\end{array}\right)\boldsymbol{Y}_{z}^{T}$
\end_inset

 where 
\series bold

\begin_inset Formula $\boldsymbol{Y}_{z}$
\end_inset

 
\series default
is the insertion Jacobian
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{Y}_{z}=\frac{\partial\boldsymbol{y}}{\partial\boldsymbol{z}}=\left(\begin{array}{ccc}
\boldsymbol{I}_{n\times n} &  & 0_{n\times2}\\
\boldsymbol{G}_{x} & 0_{2\times n-3} & \boldsymbol{G}_{z}
\end{array}\right)$
\end_inset

 
\end_layout

\begin_layout Standard
that relates the rate of change of the extended state vector to the new
 observation.
 
\begin_inset Formula $n$
\end_inset

 is the dimension of 
\begin_inset Formula $\hat{\boldsymbol{P}}$
\end_inset

 prior to it being extended and
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{G}_{x}=\frac{\partial\boldsymbol{g}}{\partial\boldsymbol{x}}=\left(\begin{array}{ccc}
0 & 0 & 0\\
0 & 0 & 0
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{G}_{z}=\frac{\partial\boldsymbol{g}}{\partial\boldsymbol{z}}=\left(\begin{array}{cc}
\cos\left(\theta_{v}+\beta\right) & -r\sin\left(\theta_{v}+\beta\right)\\
\sin\left(\theta_{v}+\beta\right) & r\cos\left(\theta_{v}+\beta\right)
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $G_{x}$
\end_inset

 is zero since 
\begin_inset Formula $g(.)$
\end_inset

 is independent of the map in 
\begin_inset Formula $\boldsymbol{x}$
\end_inset

.
 An additional Jacobian for 
\begin_inset Formula $\boldsymbol{h}(.)$
\end_inset

 is
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{H}_{p_{i}}=\frac{\partial\boldsymbol{h}}{\partial\boldsymbol{p}_{i}}=\left(\begin{array}{cc}
\frac{x_{i}-x_{v}}{r} & \frac{y_{i}-y_{v}}{r}\\
-\frac{y_{i}-y_{v}}{r^{2}} & \frac{x_{i}-x_{v}}{r^{2}}
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
which describes how the landmark observation changes with respect to landmark
 position for a particular robot pose.
\end_layout

\begin_layout Standard
+ The observation depends only on the position of that landmark so this
 Jacobian is mostly zeros
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{H}_{x}=\frac{\partial\boldsymbol{h}}{\partial\boldsymbol{x}}(\boldsymbol{\omega}=0)=\left(0...\boldsymbol{H}_{p_{i}}...0\right)\in\mathbb{R}^{2\times2M}$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\boldsymbol{H}_{p_{i}}$
\end_inset

 is at the location in the vector corresponding to the state 
\begin_inset Formula $\boldsymbol{p}_{i}$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
6.4.
 Loalization and Mapping 
\end_layout

\begin_layout Standard
+ The state vector comprises the vehicle configuration and the coordinates
 of the 
\begin_inset Formula $M$
\end_inset

 landmarks that have been observed so far
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\boldsymbol{x}}=\left(x_{v},y_{v},\theta_{v},x_{1},y_{1},x_{2},y_{2},...,x_{M},y_{M}\right)^{T}\in\mathbb{R}^{2M+3\times1}$
\end_inset


\end_layout

\begin_layout Standard
+ The estimated covariance is a 
\begin_inset Formula $(2M+3)×(2M+3)$
\end_inset

 matrix and has the structure
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\boldsymbol{P}}=\left(\begin{array}{cc}
\hat{\boldsymbol{P}}_{vv} & \hat{\boldsymbol{P}}_{vm}\\
\hat{\boldsymbol{P}}_{vm}^{T} & \hat{\boldsymbol{P}}_{mm}
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\hat{\boldsymbol{P}}_{vv}$
\end_inset

is the covariance of the vehicle pose, 
\begin_inset Formula $\hat{\boldsymbol{P}}_{mm}$
\end_inset

 the covariance of the map landmark positions, and 
\begin_inset Formula $\hat{\boldsymbol{P}}_{vm}$
\end_inset

 is the correlation between vehicle and landmark states.
\end_layout

\begin_layout Standard
+ When a new feature is observed the state vector is updated using the insertion
 Jacobian 
\begin_inset Formula $\boldsymbol{Y}_{z}$
\end_inset

 but in this case 
\begin_inset Formula $\boldsymbol{G}_{x}$
\end_inset

 is nonzero
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{G}_{x}=\frac{\partial\boldsymbol{g}}{\partial\boldsymbol{x}}=\left(\begin{array}{ccc}
1 & 0 & -r\sin\left(\theta_{v}+\beta\right)\\
0 & 1 & r\cos\left(\theta_{v}+\beta\right)
\end{array}\right)$
\end_inset

 
\end_layout

\begin_layout Standard
since the estimate of the new landmark depends on the state vector which
 now contains the vehicle’s pose.
\end_layout

\begin_layout Standard
+ The observation will depend on the position of the vehicle and on the
 position of the observed landmark and is
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{H}_{x}=\frac{\partial\boldsymbol{h}}{\partial\boldsymbol{x}}(\boldsymbol{\omega}=0)=\left(\boldsymbol{H}_{x_{v}}...0...\boldsymbol{H}_{p_{i}}...0\right)\in\mathbb{R}^{2\times(2M+3)}$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\boldsymbol{H}_{p_{i}}$
\end_inset

is at the location corresponding to the landmark 
\begin_inset Formula $\boldsymbol{p}_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
+ The Kalman gain matrix K 
\emph on
distributes
\emph default
 innovation from the landmark observation, a 2-vector, to update 
\emph on
every
\emph default
 element of the state vector – the pose of the vehicle and the position
 of 
\emph on
every
\emph default
 landmark in the map.
\end_layout

\begin_layout Standard

\series bold
6.5.
 Rao-Blackwellized SLAM
\end_layout

\end_body
\end_document
